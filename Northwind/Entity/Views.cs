//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsAAC5349BEC838952F7C2E4ACC8EBE0CE4CD686A9F4D2A802830617A8A329B896))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsAAC5349BEC838952F7C2E4ACC8EBE0CE4CD686A9F4D2A802830617A8A329B896 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsAAC5349BEC838952F7C2E4ACC8EBE0CE4CD686A9F4D2A802830617A8A329B896()
        {
            this.EdmEntityContainerName = "ObjectContextEntities";
            this.StoreEntityContainerName = "NorthwindDtoStoreContainer";
            this.HashOverMappingClosure = "99354ff7c0c058cc48341ee9c58835cae5703fd85d77cd9a901d2696da56fc5b";
            this.HashOverAllExtentViews = "8b6f9dd12d87643c98e3aaecabdd3c9dca7c669acc8399d364d50ce2f2e57691";
            this.ViewCount = 56;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Categories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Categories", @"
    SELECT VALUE -- Constructing Categories
        [Northwind.Dto.Store.Categories](T1.Categories_CategoryID, T1.Categories_CategoryName, T1.Categories_Description, T1.Categories_Picture)
    FROM (
        SELECT 
            T.CategoryID AS Categories_CategoryID, 
            T.CategoryName AS Categories_CategoryName, 
            T.Description AS Categories_Description, 
            T.Picture AS Categories_Picture, 
            True AS _from0
        FROM ObjectContextEntities.Categories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.CustomerDemographics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.CustomerDemographics", @"
    SELECT VALUE -- Constructing CustomerDemographics
        [Northwind.Dto.Store.CustomerDemographics](T1.CustomerDemographics_CustomerTypeID, T1.CustomerDemographics_CustomerDesc)
    FROM (
        SELECT 
            T.CustomerTypeID AS CustomerDemographics_CustomerTypeID, 
            T.CustomerDesc AS CustomerDemographics_CustomerDesc, 
            True AS _from0
        FROM ObjectContextEntities.CustomerDemographics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Customers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Customers", @"
    SELECT VALUE -- Constructing Customers
        [Northwind.Dto.Store.Customers](T1.Customers_CustomerID, T1.Customers_CompanyName, T1.Customers_ContactName, T1.Customers_ContactTitle, T1.Customers_Address, T1.Customers_City, T1.Customers_Region, T1.Customers_PostalCode, T1.Customers_Country, T1.Customers_Phone, T1.Customers_Fax)
    FROM (
        SELECT 
            T.CustomerID AS Customers_CustomerID, 
            T.CompanyName AS Customers_CompanyName, 
            T.ContactName AS Customers_ContactName, 
            T.ContactTitle AS Customers_ContactTitle, 
            T.Address AS Customers_Address, 
            T.City AS Customers_City, 
            T.Region AS Customers_Region, 
            T.PostalCode AS Customers_PostalCode, 
            T.Country AS Customers_Country, 
            T.Phone AS Customers_Phone, 
            T.Fax AS Customers_Fax, 
            True AS _from0
        FROM ObjectContextEntities.Customers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Employees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Employees", @"
    SELECT VALUE -- Constructing Employees
        [Northwind.Dto.Store.Employees](T1.Employees_EmployeeID, T1.Employees_LastName, T1.Employees_FirstName, T1.Employees_Title, T1.Employees_TitleOfCourtesy, T1.Employees_BirthDate, T1.Employees_HireDate, T1.Employees_Address, T1.Employees_City, T1.Employees_Region, T1.Employees_PostalCode, T1.Employees_Country, T1.Employees_HomePhone, T1.Employees_Extension, T1.Employees_Photo, T1.Employees_Notes, T1.Employees_ReportsTo, T1.Employees_PhotoPath)
    FROM (
        SELECT 
            T.EmployeeID AS Employees_EmployeeID, 
            T.LastName AS Employees_LastName, 
            T.FirstName AS Employees_FirstName, 
            T.Title AS Employees_Title, 
            T.TitleOfCourtesy AS Employees_TitleOfCourtesy, 
            T.BirthDate AS Employees_BirthDate, 
            T.HireDate AS Employees_HireDate, 
            T.Address AS Employees_Address, 
            T.City AS Employees_City, 
            T.Region AS Employees_Region, 
            T.PostalCode AS Employees_PostalCode, 
            T.Country AS Employees_Country, 
            T.HomePhone AS Employees_HomePhone, 
            T.Extension AS Employees_Extension, 
            T.Photo AS Employees_Photo, 
            T.Notes AS Employees_Notes, 
            T.ReportsTo AS Employees_ReportsTo, 
            T.PhotoPath AS Employees_PhotoPath, 
            True AS _from0
        FROM ObjectContextEntities.Employees AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Orderdetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Orderdetails", @"
    SELECT VALUE -- Constructing Orderdetails
        [Northwind.Dto.Store.Orderdetails](T1.Orderdetails_OrderID, T1.Orderdetails_ProductID, T1.Orderdetails_UnitPrice, T1.Orderdetails_Quantity, T1.Orderdetails_Discount)
    FROM (
        SELECT 
            T.OrderID AS Orderdetails_OrderID, 
            T.ProductID AS Orderdetails_ProductID, 
            T.UnitPrice AS Orderdetails_UnitPrice, 
            T.Quantity AS Orderdetails_Quantity, 
            T.Discount AS Orderdetails_Discount, 
            True AS _from0
        FROM ObjectContextEntities.Orderdetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Orders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Orders", @"
    SELECT VALUE -- Constructing Orders
        [Northwind.Dto.Store.Orders](T1.Orders_OrderID, T1.Orders_CustomerID, T1.Orders_EmployeeID, T1.Orders_OrderDate, T1.Orders_RequiredDate, T1.Orders_ShippedDate, T1.Orders_ShipVia, T1.Orders_Freight, T1.Orders_ShipName, T1.Orders_ShipAddress, T1.Orders_ShipCity, T1.Orders_ShipRegion, T1.Orders_ShipPostalCode, T1.Orders_ShipCountry)
    FROM (
        SELECT 
            T.OrderID AS Orders_OrderID, 
            T.CustomerID AS Orders_CustomerID, 
            T.EmployeeID AS Orders_EmployeeID, 
            T.OrderDate AS Orders_OrderDate, 
            T.RequiredDate AS Orders_RequiredDate, 
            T.ShippedDate AS Orders_ShippedDate, 
            T.ShipVia AS Orders_ShipVia, 
            T.Freight AS Orders_Freight, 
            T.ShipName AS Orders_ShipName, 
            T.ShipAddress AS Orders_ShipAddress, 
            T.ShipCity AS Orders_ShipCity, 
            T.ShipRegion AS Orders_ShipRegion, 
            T.ShipPostalCode AS Orders_ShipPostalCode, 
            T.ShipCountry AS Orders_ShipCountry, 
            True AS _from0
        FROM ObjectContextEntities.Orders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Products
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Products", @"
    SELECT VALUE -- Constructing Products
        [Northwind.Dto.Store.Products](T1.Products_ProductID, T1.Products_ProductName, T1.Products_SupplierID, T1.Products_CategoryID, T1.Products_QuantityPerUnit, T1.Products_UnitPrice, T1.Products_UnitsInStock, T1.Products_UnitsOnOrder, T1.Products_ReorderLevel, T1.Products_Discontinued)
    FROM (
        SELECT 
            T.ProductID AS Products_ProductID, 
            T.ProductName AS Products_ProductName, 
            T.SupplierID AS Products_SupplierID, 
            T.CategoryID AS Products_CategoryID, 
            T.QuantityPerUnit AS Products_QuantityPerUnit, 
            T.UnitPrice AS Products_UnitPrice, 
            T.UnitsInStock AS Products_UnitsInStock, 
            T.UnitsOnOrder AS Products_UnitsOnOrder, 
            T.ReorderLevel AS Products_ReorderLevel, 
            T.Discontinued AS Products_Discontinued, 
            True AS _from0
        FROM ObjectContextEntities.Products AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Region
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Region", @"
    SELECT VALUE -- Constructing Region
        [Northwind.Dto.Store.Region](T1.Region_RegionID, T1.Region_RegionDescription)
    FROM (
        SELECT 
            T.RegionID AS Region_RegionID, 
            T.RegionDescription AS Region_RegionDescription, 
            True AS _from0
        FROM ObjectContextEntities.Region AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Shippers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Shippers", @"
    SELECT VALUE -- Constructing Shippers
        [Northwind.Dto.Store.Shippers](T1.Shippers_ShipperID, T1.Shippers_CompanyName, T1.Shippers_Phone)
    FROM (
        SELECT 
            T.ShipperID AS Shippers_ShipperID, 
            T.CompanyName AS Shippers_CompanyName, 
            T.Phone AS Shippers_Phone, 
            True AS _from0
        FROM ObjectContextEntities.Shippers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Suppliers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Suppliers", @"
    SELECT VALUE -- Constructing Suppliers
        [Northwind.Dto.Store.Suppliers](T1.Suppliers_SupplierID, T1.Suppliers_CompanyName, T1.Suppliers_ContactName, T1.Suppliers_ContactTitle, T1.Suppliers_Address, T1.Suppliers_City, T1.Suppliers_Region, T1.Suppliers_PostalCode, T1.Suppliers_Country, T1.Suppliers_Phone, T1.Suppliers_Fax, T1.Suppliers_HomePage)
    FROM (
        SELECT 
            T.SupplierID AS Suppliers_SupplierID, 
            T.CompanyName AS Suppliers_CompanyName, 
            T.ContactName AS Suppliers_ContactName, 
            T.ContactTitle AS Suppliers_ContactTitle, 
            T.Address AS Suppliers_Address, 
            T.City AS Suppliers_City, 
            T.Region AS Suppliers_Region, 
            T.PostalCode AS Suppliers_PostalCode, 
            T.Country AS Suppliers_Country, 
            T.Phone AS Suppliers_Phone, 
            T.Fax AS Suppliers_Fax, 
            T.HomePage AS Suppliers_HomePage, 
            True AS _from0
        FROM ObjectContextEntities.Suppliers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Territories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Territories", @"
    SELECT VALUE -- Constructing Territories
        [Northwind.Dto.Store.Territories](T1.Territories_TerritoryID, T1.Territories_TerritoryDescription, T1.Territories_RegionID)
    FROM (
        SELECT 
            T.TerritoryID AS Territories_TerritoryID, 
            T.TerritoryDescription AS Territories_TerritoryDescription, 
            T.RegionID AS Territories_RegionID, 
            True AS _from0
        FROM ObjectContextEntities.Territories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.CustomerCustomerDemo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.CustomerCustomerDemo", @"
    SELECT VALUE -- Constructing CustomerCustomerDemo
        [Northwind.Dto.Store.CustomerCustomerDemo](T1.CustomerCustomerDemo_CustomerID, T1.CustomerCustomerDemo_CustomerTypeID)
    FROM (
        SELECT 
            Key(T.Customers).CustomerID AS CustomerCustomerDemo_CustomerID, 
            Key(T.CustomerDemographics).CustomerTypeID AS CustomerCustomerDemo_CustomerTypeID, 
            True AS _from0
        FROM ObjectContextEntities.CustomerCustomerDemo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.EmployeeTerritories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.EmployeeTerritories", @"
    SELECT VALUE -- Constructing EmployeeTerritories
        [Northwind.Dto.Store.EmployeeTerritories](T1.EmployeeTerritories_EmployeeID, T1.EmployeeTerritories_TerritoryID)
    FROM (
        SELECT 
            Key(T.Employees).EmployeeID AS EmployeeTerritories_EmployeeID, 
            Key(T.Territories).TerritoryID AS EmployeeTerritories_TerritoryID, 
            True AS _from0
        FROM ObjectContextEntities.EmployeeTerritories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Categories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Categories", @"
    SELECT VALUE -- Constructing Categories
        [Northwind.Dto.Categories](T1.Categories_CategoryID, T1.Categories_CategoryName, T1.Categories_Description, T1.Categories_Picture)
    FROM (
        SELECT 
            T.CategoryID AS Categories_CategoryID, 
            T.CategoryName AS Categories_CategoryName, 
            T.Description AS Categories_Description, 
            T.Picture AS Categories_Picture, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Categories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.CustomerDemographics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.CustomerDemographics", @"
    SELECT VALUE -- Constructing CustomerDemographics
        [Northwind.Dto.CustomerDemographics](T1.CustomerDemographics_CustomerTypeID, T1.CustomerDemographics_CustomerDesc)
    FROM (
        SELECT 
            T.CustomerTypeID AS CustomerDemographics_CustomerTypeID, 
            T.CustomerDesc AS CustomerDemographics_CustomerDesc, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.CustomerDemographics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Customers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Customers", @"
    SELECT VALUE -- Constructing Customers
        [Northwind.Dto.Customers](T1.Customers_CustomerID, T1.Customers_CompanyName, T1.Customers_ContactName, T1.Customers_ContactTitle, T1.Customers_Address, T1.Customers_City, T1.Customers_Region, T1.Customers_PostalCode, T1.Customers_Country, T1.Customers_Phone, T1.Customers_Fax)
    FROM (
        SELECT 
            T.CustomerID AS Customers_CustomerID, 
            T.CompanyName AS Customers_CompanyName, 
            T.ContactName AS Customers_ContactName, 
            T.ContactTitle AS Customers_ContactTitle, 
            T.Address AS Customers_Address, 
            T.City AS Customers_City, 
            T.Region AS Customers_Region, 
            T.PostalCode AS Customers_PostalCode, 
            T.Country AS Customers_Country, 
            T.Phone AS Customers_Phone, 
            T.Fax AS Customers_Fax, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Customers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Employees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Employees", @"
    SELECT VALUE -- Constructing Employees
        [Northwind.Dto.Employees](T1.Employees_EmployeeID, T1.Employees_LastName, T1.Employees_FirstName, T1.Employees_Title, T1.Employees_TitleOfCourtesy, T1.Employees_BirthDate, T1.Employees_HireDate, T1.Employees_Address, T1.Employees_City, T1.Employees_Region, T1.Employees_PostalCode, T1.Employees_Country, T1.Employees_HomePhone, T1.Employees_Extension, T1.Employees_Photo, T1.Employees_Notes, T1.Employees_ReportsTo, T1.Employees_PhotoPath)
    FROM (
        SELECT 
            T.EmployeeID AS Employees_EmployeeID, 
            T.LastName AS Employees_LastName, 
            T.FirstName AS Employees_FirstName, 
            T.Title AS Employees_Title, 
            T.TitleOfCourtesy AS Employees_TitleOfCourtesy, 
            T.BirthDate AS Employees_BirthDate, 
            T.HireDate AS Employees_HireDate, 
            T.Address AS Employees_Address, 
            T.City AS Employees_City, 
            T.Region AS Employees_Region, 
            T.PostalCode AS Employees_PostalCode, 
            T.Country AS Employees_Country, 
            T.HomePhone AS Employees_HomePhone, 
            T.Extension AS Employees_Extension, 
            T.Photo AS Employees_Photo, 
            T.Notes AS Employees_Notes, 
            T.ReportsTo AS Employees_ReportsTo, 
            T.PhotoPath AS Employees_PhotoPath, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Employees AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Orderdetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Orderdetails", @"
    SELECT VALUE -- Constructing Orderdetails
        [Northwind.Dto.Orderdetails](T1.Orderdetails_OrderID, T1.Orderdetails_ProductID, T1.Orderdetails_UnitPrice, T1.Orderdetails_Quantity, T1.Orderdetails_Discount)
    FROM (
        SELECT 
            T.OrderID AS Orderdetails_OrderID, 
            T.ProductID AS Orderdetails_ProductID, 
            T.UnitPrice AS Orderdetails_UnitPrice, 
            T.Quantity AS Orderdetails_Quantity, 
            T.Discount AS Orderdetails_Discount, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Orderdetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Orders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Orders", @"
    SELECT VALUE -- Constructing Orders
        [Northwind.Dto.Orders](T1.Orders_OrderID, T1.Orders_CustomerID, T1.Orders_EmployeeID, T1.Orders_OrderDate, T1.Orders_RequiredDate, T1.Orders_ShippedDate, T1.Orders_ShipVia, T1.Orders_Freight, T1.Orders_ShipName, T1.Orders_ShipAddress, T1.Orders_ShipCity, T1.Orders_ShipRegion, T1.Orders_ShipPostalCode, T1.Orders_ShipCountry)
    FROM (
        SELECT 
            T.OrderID AS Orders_OrderID, 
            T.CustomerID AS Orders_CustomerID, 
            T.EmployeeID AS Orders_EmployeeID, 
            T.OrderDate AS Orders_OrderDate, 
            T.RequiredDate AS Orders_RequiredDate, 
            T.ShippedDate AS Orders_ShippedDate, 
            T.ShipVia AS Orders_ShipVia, 
            T.Freight AS Orders_Freight, 
            T.ShipName AS Orders_ShipName, 
            T.ShipAddress AS Orders_ShipAddress, 
            T.ShipCity AS Orders_ShipCity, 
            T.ShipRegion AS Orders_ShipRegion, 
            T.ShipPostalCode AS Orders_ShipPostalCode, 
            T.ShipCountry AS Orders_ShipCountry, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Orders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Products
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Products", @"
    SELECT VALUE -- Constructing Products
        [Northwind.Dto.Products](T1.Products_ProductID, T1.Products_ProductName, T1.Products_SupplierID, T1.Products_CategoryID, T1.Products_QuantityPerUnit, T1.Products_UnitPrice, T1.Products_UnitsInStock, T1.Products_UnitsOnOrder, T1.Products_ReorderLevel, T1.Products_Discontinued)
    FROM (
        SELECT 
            T.ProductID AS Products_ProductID, 
            T.ProductName AS Products_ProductName, 
            T.SupplierID AS Products_SupplierID, 
            T.CategoryID AS Products_CategoryID, 
            T.QuantityPerUnit AS Products_QuantityPerUnit, 
            T.UnitPrice AS Products_UnitPrice, 
            T.UnitsInStock AS Products_UnitsInStock, 
            T.UnitsOnOrder AS Products_UnitsOnOrder, 
            T.ReorderLevel AS Products_ReorderLevel, 
            T.Discontinued AS Products_Discontinued, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Products AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Region
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Region", @"
    SELECT VALUE -- Constructing Region
        [Northwind.Dto.Region](T1.Region_RegionID, T1.Region_RegionDescription)
    FROM (
        SELECT 
            T.RegionID AS Region_RegionID, 
            T.RegionDescription AS Region_RegionDescription, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Region AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Shippers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Shippers", @"
    SELECT VALUE -- Constructing Shippers
        [Northwind.Dto.Shippers](T1.Shippers_ShipperID, T1.Shippers_CompanyName, T1.Shippers_Phone)
    FROM (
        SELECT 
            T.ShipperID AS Shippers_ShipperID, 
            T.CompanyName AS Shippers_CompanyName, 
            T.Phone AS Shippers_Phone, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Shippers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Suppliers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Suppliers", @"
    SELECT VALUE -- Constructing Suppliers
        [Northwind.Dto.Suppliers](T1.Suppliers_SupplierID, T1.Suppliers_CompanyName, T1.Suppliers_ContactName, T1.Suppliers_ContactTitle, T1.Suppliers_Address, T1.Suppliers_City, T1.Suppliers_Region, T1.Suppliers_PostalCode, T1.Suppliers_Country, T1.Suppliers_Phone, T1.Suppliers_Fax, T1.Suppliers_HomePage)
    FROM (
        SELECT 
            T.SupplierID AS Suppliers_SupplierID, 
            T.CompanyName AS Suppliers_CompanyName, 
            T.ContactName AS Suppliers_ContactName, 
            T.ContactTitle AS Suppliers_ContactTitle, 
            T.Address AS Suppliers_Address, 
            T.City AS Suppliers_City, 
            T.Region AS Suppliers_Region, 
            T.PostalCode AS Suppliers_PostalCode, 
            T.Country AS Suppliers_Country, 
            T.Phone AS Suppliers_Phone, 
            T.Fax AS Suppliers_Fax, 
            T.HomePage AS Suppliers_HomePage, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Suppliers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Territories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Territories", @"
    SELECT VALUE -- Constructing Territories
        [Northwind.Dto.Territories](T1.Territories_TerritoryID, T1.Territories_TerritoryDescription, T1.Territories_RegionID)
    FROM (
        SELECT 
            T.TerritoryID AS Territories_TerritoryID, 
            T.TerritoryDescription AS Territories_TerritoryDescription, 
            T.RegionID AS Territories_RegionID, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.Territories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.CustomerCustomerDemo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.CustomerCustomerDemo", @"
    SELECT VALUE -- Constructing CustomerCustomerDemo
        [Northwind.Dto.CustomerCustomerDemo](T3.CustomerCustomerDemo_CustomerDemographics, T3.CustomerCustomerDemo_Customers)
    FROM (
        SELECT -- Constructing CustomerDemographics
            CreateRef(ObjectContextEntities.CustomerDemographics, row(T2.CustomerCustomerDemo_CustomerDemographics_CustomerTypeID),[Northwind.Dto.CustomerDemographics]) AS CustomerCustomerDemo_CustomerDemographics, 
            T2.CustomerCustomerDemo_Customers
        FROM (
            SELECT -- Constructing Customers
                CreateRef(ObjectContextEntities.Customers, row(T1.CustomerCustomerDemo_Customers_CustomerID),[Northwind.Dto.Customers]) AS CustomerCustomerDemo_Customers, 
                T1.CustomerCustomerDemo_CustomerDemographics_CustomerTypeID
            FROM (
                SELECT 
                    T.CustomerTypeID AS CustomerCustomerDemo_CustomerDemographics_CustomerTypeID, 
                    T.CustomerID AS CustomerCustomerDemo_Customers_CustomerID, 
                    True AS _from0
                FROM NorthwindDtoStoreContainer.CustomerCustomerDemo AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.EmployeeTerritories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.EmployeeTerritories", @"
    SELECT VALUE -- Constructing EmployeeTerritories
        [Northwind.Dto.EmployeeTerritories](T3.EmployeeTerritories_Employees, T3.EmployeeTerritories_Territories)
    FROM (
        SELECT -- Constructing Employees
            CreateRef(ObjectContextEntities.Employees, row(T2.EmployeeTerritories_Employees_EmployeeID),[Northwind.Dto.Employees]) AS EmployeeTerritories_Employees, 
            T2.EmployeeTerritories_Territories
        FROM (
            SELECT -- Constructing Territories
                CreateRef(ObjectContextEntities.Territories, row(T1.EmployeeTerritories_Territories_TerritoryID),[Northwind.Dto.Territories]) AS EmployeeTerritories_Territories, 
                T1.EmployeeTerritories_Employees_EmployeeID
            FROM (
                SELECT 
                    T.EmployeeID AS EmployeeTerritories_Employees_EmployeeID, 
                    T.TerritoryID AS EmployeeTerritories_Territories_TerritoryID, 
                    True AS _from0
                FROM NorthwindDtoStoreContainer.EmployeeTerritories AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Alphabeticallistofproducts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Alphabeticallistofproducts", "\r\n    SELECT VALUE -- Constructing Alphabeticallistofproducts\r\n        [Northwind" +
                    ".Dto.Store.Alphabeticallistofproducts](T1.Alphabeticallistofproducts_ProductID, " +
                    "T1.Alphabeticallistofproducts_ProductName, T1.Alphabeticallistofproducts_Supplie" +
                    "rID, T1.Alphabeticallistofproducts_CategoryID, T1.Alphabeticallistofproducts_Qua" +
                    "ntityPerUnit, T1.Alphabeticallistofproducts_UnitPrice, T1.Alphabeticallistofprod" +
                    "ucts_UnitsInStock, T1.Alphabeticallistofproducts_UnitsOnOrder, T1.Alphabeticalli" +
                    "stofproducts_ReorderLevel, T1.Alphabeticallistofproducts_Discontinued, T1.Alphab" +
                    "eticallistofproducts_CategoryName)\r\n    FROM (\r\n        SELECT \r\n            T.P" +
                    "roductID AS Alphabeticallistofproducts_ProductID, \r\n            T.ProductName AS" +
                    " Alphabeticallistofproducts_ProductName, \r\n            T.SupplierID AS Alphabeti" +
                    "callistofproducts_SupplierID, \r\n            T.CategoryID AS Alphabeticallistofpr" +
                    "oducts_CategoryID, \r\n            T.QuantityPerUnit AS Alphabeticallistofproducts" +
                    "_QuantityPerUnit, \r\n            T.UnitPrice AS Alphabeticallistofproducts_UnitPr" +
                    "ice, \r\n            T.UnitsInStock AS Alphabeticallistofproducts_UnitsInStock, \r\n" +
                    "            T.UnitsOnOrder AS Alphabeticallistofproducts_UnitsOnOrder, \r\n       " +
                    "     T.ReorderLevel AS Alphabeticallistofproducts_ReorderLevel, \r\n            T." +
                    "Discontinued AS Alphabeticallistofproducts_Discontinued, \r\n            T.Categor" +
                    "yName AS Alphabeticallistofproducts_CategoryName, \r\n            True AS _from0\r\n" +
                    "        FROM ObjectContextEntities.Alphabeticallistofproducts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Alphabeticallistofproducts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Alphabeticallistofproducts", "\r\n    SELECT VALUE -- Constructing Alphabeticallistofproducts\r\n        [Northwind" +
                    ".Dto.Alphabeticallistofproducts](T1.Alphabeticallistofproducts_ProductID, T1.Alp" +
                    "habeticallistofproducts_ProductName, T1.Alphabeticallistofproducts_SupplierID, T" +
                    "1.Alphabeticallistofproducts_CategoryID, T1.Alphabeticallistofproducts_QuantityP" +
                    "erUnit, T1.Alphabeticallistofproducts_UnitPrice, T1.Alphabeticallistofproducts_U" +
                    "nitsInStock, T1.Alphabeticallistofproducts_UnitsOnOrder, T1.Alphabeticallistofpr" +
                    "oducts_ReorderLevel, T1.Alphabeticallistofproducts_Discontinued, T1.Alphabetical" +
                    "listofproducts_CategoryName)\r\n    FROM (\r\n        SELECT \r\n            T.Product" +
                    "ID AS Alphabeticallistofproducts_ProductID, \r\n            T.ProductName AS Alpha" +
                    "beticallistofproducts_ProductName, \r\n            T.SupplierID AS Alphabeticallis" +
                    "tofproducts_SupplierID, \r\n            T.CategoryID AS Alphabeticallistofproducts" +
                    "_CategoryID, \r\n            T.QuantityPerUnit AS Alphabeticallistofproducts_Quant" +
                    "ityPerUnit, \r\n            T.UnitPrice AS Alphabeticallistofproducts_UnitPrice, \r" +
                    "\n            T.UnitsInStock AS Alphabeticallistofproducts_UnitsInStock, \r\n      " +
                    "      T.UnitsOnOrder AS Alphabeticallistofproducts_UnitsOnOrder, \r\n            T" +
                    ".ReorderLevel AS Alphabeticallistofproducts_ReorderLevel, \r\n            T.Discon" +
                    "tinued AS Alphabeticallistofproducts_Discontinued, \r\n            T.CategoryName " +
                    "AS Alphabeticallistofproducts_CategoryName, \r\n            True AS _from0\r\n      " +
                    "  FROM NorthwindDtoStoreContainer.Alphabeticallistofproducts AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.CategorySalesfor1997
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.CategorySalesfor1997", @"
    SELECT VALUE -- Constructing CategorySalesfor1997
        [Northwind.Dto.Store.CategorySalesfor1997](T1.CategorySalesfor1997_CategoryName, T1.CategorySalesfor1997_CategorySales)
    FROM (
        SELECT 
            T.CategoryName AS CategorySalesfor1997_CategoryName, 
            T.CategorySales AS CategorySalesfor1997_CategorySales, 
            True AS _from0
        FROM ObjectContextEntities.CategorySalesfor1997 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.CategorySalesfor1997
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.CategorySalesfor1997", @"
    SELECT VALUE -- Constructing CategorySalesfor1997
        [Northwind.Dto.CategorySalesfor1997](T1.CategorySalesfor1997_CategoryName, T1.CategorySalesfor1997_CategorySales)
    FROM (
        SELECT 
            T.CategoryName AS CategorySalesfor1997_CategoryName, 
            T.CategorySales AS CategorySalesfor1997_CategorySales, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.CategorySalesfor1997 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.CurrentProductList
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.CurrentProductList", @"
    SELECT VALUE -- Constructing CurrentProductList
        [Northwind.Dto.Store.CurrentProductList](T1.CurrentProductList_ProductID, T1.CurrentProductList_ProductName)
    FROM (
        SELECT 
            T.ProductID AS CurrentProductList_ProductID, 
            T.ProductName AS CurrentProductList_ProductName, 
            True AS _from0
        FROM ObjectContextEntities.CurrentProductList AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.CurrentProductList
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.CurrentProductList", @"
    SELECT VALUE -- Constructing CurrentProductList
        [Northwind.Dto.CurrentProductList](T1.CurrentProductList_ProductID, T1.CurrentProductList_ProductName)
    FROM (
        SELECT 
            T.ProductID AS CurrentProductList_ProductID, 
            T.ProductName AS CurrentProductList_ProductName, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.CurrentProductList AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.CustomerandSuppliersbyCity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.CustomerandSuppliersbyCity", @"
    SELECT VALUE -- Constructing CustomerandSuppliersbyCity
        [Northwind.Dto.Store.CustomerandSuppliersbyCity](T1.CustomerandSuppliersbyCity_City, T1.CustomerandSuppliersbyCity_CompanyName, T1.CustomerandSuppliersbyCity_ContactName, T1.CustomerandSuppliersbyCity_Relationship)
    FROM (
        SELECT 
            T.City AS CustomerandSuppliersbyCity_City, 
            T.CompanyName AS CustomerandSuppliersbyCity_CompanyName, 
            T.ContactName AS CustomerandSuppliersbyCity_ContactName, 
            T.[Relationship] AS CustomerandSuppliersbyCity_Relationship, 
            True AS _from0
        FROM ObjectContextEntities.CustomerandSuppliersbyCity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.CustomerandSuppliersbyCity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.CustomerandSuppliersbyCity", @"
    SELECT VALUE -- Constructing CustomerandSuppliersbyCity
        [Northwind.Dto.CustomerandSuppliersbyCity](T1.CustomerandSuppliersbyCity_City, T1.CustomerandSuppliersbyCity_CompanyName, T1.CustomerandSuppliersbyCity_ContactName, T1.CustomerandSuppliersbyCity_Relationship)
    FROM (
        SELECT 
            T.City AS CustomerandSuppliersbyCity_City, 
            T.CompanyName AS CustomerandSuppliersbyCity_CompanyName, 
            T.ContactName AS CustomerandSuppliersbyCity_ContactName, 
            T.[Relationship] AS CustomerandSuppliersbyCity_Relationship, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.CustomerandSuppliersbyCity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.Invoices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2105);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Invoices\r\n        [Northwind.Dto.Store.Invoic");
            viewString.Append("es](T1.Invoices_ShipName, T1.Invoices_ShipAddress, T1.Invoices_ShipCity, T1.Invo");
            viewString.Append("ices_ShipRegion, T1.Invoices_ShipPostalCode, T1.Invoices_ShipCountry, T1.Invoice");
            viewString.Append("s_CustomerID, T1.Invoices_CustomerName, T1.Invoices_Address, T1.Invoices_City, T");
            viewString.Append("1.Invoices_Region, T1.Invoices_PostalCode, T1.Invoices_Country, T1.Invoices_Sale");
            viewString.Append("sperson, T1.Invoices_OrderID, T1.Invoices_OrderDate, T1.Invoices_RequiredDate, T");
            viewString.Append("1.Invoices_ShippedDate, T1.Invoices_ShipperName, T1.Invoices_ProductID, T1.Invoi");
            viewString.Append("ces_ProductName, T1.Invoices_UnitPrice, T1.Invoices_Quantity, T1.Invoices_Discou");
            viewString.Append("nt, T1.Invoices_ExtendedPrice, T1.Invoices_Freight)\r\n    FROM (\r\n        SELECT ");
            viewString.Append("\r\n            T.ShipName AS Invoices_ShipName, \r\n            T.ShipAddress AS In");
            viewString.Append("voices_ShipAddress, \r\n            T.ShipCity AS Invoices_ShipCity, \r\n           ");
            viewString.Append(" T.ShipRegion AS Invoices_ShipRegion, \r\n            T.ShipPostalCode AS Invoices");
            viewString.Append("_ShipPostalCode, \r\n            T.ShipCountry AS Invoices_ShipCountry, \r\n        ");
            viewString.Append("    T.CustomerID AS Invoices_CustomerID, \r\n            T.CustomerName AS Invoice");
            viewString.Append("s_CustomerName, \r\n            T.Address AS Invoices_Address, \r\n            T.Cit");
            viewString.Append("y AS Invoices_City, \r\n            T.Region AS Invoices_Region, \r\n            T.P");
            viewString.Append("ostalCode AS Invoices_PostalCode, \r\n            T.Country AS Invoices_Country, \r");
            viewString.Append("\n            T.Salesperson AS Invoices_Salesperson, \r\n            T.OrderID AS I");
            viewString.Append("nvoices_OrderID, \r\n            T.OrderDate AS Invoices_OrderDate, \r\n            ");
            viewString.Append("T.RequiredDate AS Invoices_RequiredDate, \r\n            T.ShippedDate AS Invoices");
            viewString.Append("_ShippedDate, \r\n            T.ShipperName AS Invoices_ShipperName, \r\n           ");
            viewString.Append(" T.ProductID AS Invoices_ProductID, \r\n            T.ProductName AS Invoices_Prod");
            viewString.Append("uctName, \r\n            T.UnitPrice AS Invoices_UnitPrice, \r\n            T.Quanti");
            viewString.Append("ty AS Invoices_Quantity, \r\n            T.Discount AS Invoices_Discount, \r\n      ");
            viewString.Append("      T.ExtendedPrice AS Invoices_ExtendedPrice, \r\n            T.Freight AS Invo");
            viewString.Append("ices_Freight, \r\n            True AS _from0\r\n        FROM ObjectContextEntities.I");
            viewString.Append("nvoices AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.Invoices", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.Invoices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2104);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Invoices\r\n        [Northwind.Dto.Invoices](T1");
            viewString.Append(".Invoices_ShipName, T1.Invoices_ShipAddress, T1.Invoices_ShipCity, T1.Invoices_S");
            viewString.Append("hipRegion, T1.Invoices_ShipPostalCode, T1.Invoices_ShipCountry, T1.Invoices_Cust");
            viewString.Append("omerID, T1.Invoices_CustomerName, T1.Invoices_Address, T1.Invoices_City, T1.Invo");
            viewString.Append("ices_Region, T1.Invoices_PostalCode, T1.Invoices_Country, T1.Invoices_Salesperso");
            viewString.Append("n, T1.Invoices_OrderID, T1.Invoices_OrderDate, T1.Invoices_RequiredDate, T1.Invo");
            viewString.Append("ices_ShippedDate, T1.Invoices_ShipperName, T1.Invoices_ProductID, T1.Invoices_Pr");
            viewString.Append("oductName, T1.Invoices_UnitPrice, T1.Invoices_Quantity, T1.Invoices_Discount, T1");
            viewString.Append(".Invoices_ExtendedPrice, T1.Invoices_Freight)\r\n    FROM (\r\n        SELECT \r\n    ");
            viewString.Append("        T.ShipName AS Invoices_ShipName, \r\n            T.ShipAddress AS Invoices");
            viewString.Append("_ShipAddress, \r\n            T.ShipCity AS Invoices_ShipCity, \r\n            T.Shi");
            viewString.Append("pRegion AS Invoices_ShipRegion, \r\n            T.ShipPostalCode AS Invoices_ShipP");
            viewString.Append("ostalCode, \r\n            T.ShipCountry AS Invoices_ShipCountry, \r\n            T.");
            viewString.Append("CustomerID AS Invoices_CustomerID, \r\n            T.CustomerName AS Invoices_Cust");
            viewString.Append("omerName, \r\n            T.Address AS Invoices_Address, \r\n            T.City AS I");
            viewString.Append("nvoices_City, \r\n            T.Region AS Invoices_Region, \r\n            T.PostalC");
            viewString.Append("ode AS Invoices_PostalCode, \r\n            T.Country AS Invoices_Country, \r\n     ");
            viewString.Append("       T.Salesperson AS Invoices_Salesperson, \r\n            T.OrderID AS Invoice");
            viewString.Append("s_OrderID, \r\n            T.OrderDate AS Invoices_OrderDate, \r\n            T.Requ");
            viewString.Append("iredDate AS Invoices_RequiredDate, \r\n            T.ShippedDate AS Invoices_Shipp");
            viewString.Append("edDate, \r\n            T.ShipperName AS Invoices_ShipperName, \r\n            T.Pro");
            viewString.Append("ductID AS Invoices_ProductID, \r\n            T.ProductName AS Invoices_ProductNam");
            viewString.Append("e, \r\n            T.UnitPrice AS Invoices_UnitPrice, \r\n            T.Quantity AS ");
            viewString.Append("Invoices_Quantity, \r\n            T.Discount AS Invoices_Discount, \r\n            ");
            viewString.Append("T.ExtendedPrice AS Invoices_ExtendedPrice, \r\n            T.Freight AS Invoices_F");
            viewString.Append("reight, \r\n            True AS _from0\r\n        FROM NorthwindDtoStoreContainer.In");
            viewString.Append("voices AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.Invoices", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.OrderdetailsExtended
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.OrderdetailsExtended", @"
    SELECT VALUE -- Constructing OrderdetailsExtended
        [Northwind.Dto.Store.OrderdetailsExtended](T1.OrderdetailsExtended_OrderID, T1.OrderdetailsExtended_ProductID, T1.OrderdetailsExtended_ProductName, T1.OrderdetailsExtended_UnitPrice, T1.OrderdetailsExtended_Quantity, T1.OrderdetailsExtended_Discount, T1.OrderdetailsExtended_ExtendedPrice)
    FROM (
        SELECT 
            T.OrderID AS OrderdetailsExtended_OrderID, 
            T.ProductID AS OrderdetailsExtended_ProductID, 
            T.ProductName AS OrderdetailsExtended_ProductName, 
            T.UnitPrice AS OrderdetailsExtended_UnitPrice, 
            T.Quantity AS OrderdetailsExtended_Quantity, 
            T.Discount AS OrderdetailsExtended_Discount, 
            T.ExtendedPrice AS OrderdetailsExtended_ExtendedPrice, 
            True AS _from0
        FROM ObjectContextEntities.OrderdetailsExtended AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.OrderdetailsExtended
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.OrderdetailsExtended", @"
    SELECT VALUE -- Constructing OrderdetailsExtended
        [Northwind.Dto.OrderdetailsExtended](T1.OrderdetailsExtended_OrderID, T1.OrderdetailsExtended_ProductID, T1.OrderdetailsExtended_ProductName, T1.OrderdetailsExtended_UnitPrice, T1.OrderdetailsExtended_Quantity, T1.OrderdetailsExtended_Discount, T1.OrderdetailsExtended_ExtendedPrice)
    FROM (
        SELECT 
            T.OrderID AS OrderdetailsExtended_OrderID, 
            T.ProductID AS OrderdetailsExtended_ProductID, 
            T.ProductName AS OrderdetailsExtended_ProductName, 
            T.UnitPrice AS OrderdetailsExtended_UnitPrice, 
            T.Quantity AS OrderdetailsExtended_Quantity, 
            T.Discount AS OrderdetailsExtended_Discount, 
            T.ExtendedPrice AS OrderdetailsExtended_ExtendedPrice, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.OrderdetailsExtended AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.OrdersQry
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.OrdersQry", "\r\n    SELECT VALUE -- Constructing OrdersQry\r\n        [Northwind.Dto.Store.Orders" +
                    "Qry](T1.OrdersQry_OrderID, T1.OrdersQry_CustomerID, T1.OrdersQry_EmployeeID, T1." +
                    "OrdersQry_OrderDate, T1.OrdersQry_RequiredDate, T1.OrdersQry_ShippedDate, T1.Ord" +
                    "ersQry_ShipVia, T1.OrdersQry_Freight, T1.OrdersQry_ShipName, T1.OrdersQry_ShipAd" +
                    "dress, T1.OrdersQry_ShipCity, T1.OrdersQry_ShipRegion, T1.OrdersQry_ShipPostalCo" +
                    "de, T1.OrdersQry_ShipCountry, T1.OrdersQry_CompanyName, T1.OrdersQry_Address, T1" +
                    ".OrdersQry_City, T1.OrdersQry_Region, T1.OrdersQry_PostalCode, T1.OrdersQry_Coun" +
                    "try)\r\n    FROM (\r\n        SELECT \r\n            T.OrderID AS OrdersQry_OrderID, \r" +
                    "\n            T.CustomerID AS OrdersQry_CustomerID, \r\n            T.EmployeeID AS" +
                    " OrdersQry_EmployeeID, \r\n            T.OrderDate AS OrdersQry_OrderDate, \r\n     " +
                    "       T.RequiredDate AS OrdersQry_RequiredDate, \r\n            T.ShippedDate AS " +
                    "OrdersQry_ShippedDate, \r\n            T.ShipVia AS OrdersQry_ShipVia, \r\n         " +
                    "   T.Freight AS OrdersQry_Freight, \r\n            T.ShipName AS OrdersQry_ShipNam" +
                    "e, \r\n            T.ShipAddress AS OrdersQry_ShipAddress, \r\n            T.ShipCit" +
                    "y AS OrdersQry_ShipCity, \r\n            T.ShipRegion AS OrdersQry_ShipRegion, \r\n " +
                    "           T.ShipPostalCode AS OrdersQry_ShipPostalCode, \r\n            T.ShipCou" +
                    "ntry AS OrdersQry_ShipCountry, \r\n            T.CompanyName AS OrdersQry_CompanyN" +
                    "ame, \r\n            T.Address AS OrdersQry_Address, \r\n            T.City AS Order" +
                    "sQry_City, \r\n            T.Region AS OrdersQry_Region, \r\n            T.PostalCod" +
                    "e AS OrdersQry_PostalCode, \r\n            T.Country AS OrdersQry_Country, \r\n     " +
                    "       True AS _from0\r\n        FROM ObjectContextEntities.OrdersQry AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.OrdersQry
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.OrdersQry", "\r\n    SELECT VALUE -- Constructing OrdersQry\r\n        [Northwind.Dto.OrdersQry](T" +
                    "1.OrdersQry_OrderID, T1.OrdersQry_CustomerID, T1.OrdersQry_EmployeeID, T1.Orders" +
                    "Qry_OrderDate, T1.OrdersQry_RequiredDate, T1.OrdersQry_ShippedDate, T1.OrdersQry" +
                    "_ShipVia, T1.OrdersQry_Freight, T1.OrdersQry_ShipName, T1.OrdersQry_ShipAddress," +
                    " T1.OrdersQry_ShipCity, T1.OrdersQry_ShipRegion, T1.OrdersQry_ShipPostalCode, T1" +
                    ".OrdersQry_ShipCountry, T1.OrdersQry_CompanyName, T1.OrdersQry_Address, T1.Order" +
                    "sQry_City, T1.OrdersQry_Region, T1.OrdersQry_PostalCode, T1.OrdersQry_Country)\r\n" +
                    "    FROM (\r\n        SELECT \r\n            T.OrderID AS OrdersQry_OrderID, \r\n     " +
                    "       T.CustomerID AS OrdersQry_CustomerID, \r\n            T.EmployeeID AS Order" +
                    "sQry_EmployeeID, \r\n            T.OrderDate AS OrdersQry_OrderDate, \r\n           " +
                    " T.RequiredDate AS OrdersQry_RequiredDate, \r\n            T.ShippedDate AS Orders" +
                    "Qry_ShippedDate, \r\n            T.ShipVia AS OrdersQry_ShipVia, \r\n            T.F" +
                    "reight AS OrdersQry_Freight, \r\n            T.ShipName AS OrdersQry_ShipName, \r\n " +
                    "           T.ShipAddress AS OrdersQry_ShipAddress, \r\n            T.ShipCity AS O" +
                    "rdersQry_ShipCity, \r\n            T.ShipRegion AS OrdersQry_ShipRegion, \r\n       " +
                    "     T.ShipPostalCode AS OrdersQry_ShipPostalCode, \r\n            T.ShipCountry A" +
                    "S OrdersQry_ShipCountry, \r\n            T.CompanyName AS OrdersQry_CompanyName, \r" +
                    "\n            T.Address AS OrdersQry_Address, \r\n            T.City AS OrdersQry_C" +
                    "ity, \r\n            T.Region AS OrdersQry_Region, \r\n            T.PostalCode AS O" +
                    "rdersQry_PostalCode, \r\n            T.Country AS OrdersQry_Country, \r\n           " +
                    " True AS _from0\r\n        FROM NorthwindDtoStoreContainer.OrdersQry AS T\r\n    ) A" +
                    "S T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.OrderSubtotals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.OrderSubtotals", @"
    SELECT VALUE -- Constructing OrderSubtotals
        [Northwind.Dto.Store.OrderSubtotals](T1.OrderSubtotals_OrderID, T1.OrderSubtotals_Subtotal)
    FROM (
        SELECT 
            T.OrderID AS OrderSubtotals_OrderID, 
            T.Subtotal AS OrderSubtotals_Subtotal, 
            True AS _from0
        FROM ObjectContextEntities.OrderSubtotals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.OrderSubtotals
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.OrderSubtotals", @"
    SELECT VALUE -- Constructing OrderSubtotals
        [Northwind.Dto.OrderSubtotals](T1.OrderSubtotals_OrderID, T1.OrderSubtotals_Subtotal)
    FROM (
        SELECT 
            T.OrderID AS OrderSubtotals_OrderID, 
            T.Subtotal AS OrderSubtotals_Subtotal, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.OrderSubtotals AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.ProductsAboveAveragePrice
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.ProductsAboveAveragePrice", @"
    SELECT VALUE -- Constructing ProductsAboveAveragePrice
        [Northwind.Dto.Store.ProductsAboveAveragePrice](T1.ProductsAboveAveragePrice_ProductName, T1.ProductsAboveAveragePrice_UnitPrice)
    FROM (
        SELECT 
            T.ProductName AS ProductsAboveAveragePrice_ProductName, 
            T.UnitPrice AS ProductsAboveAveragePrice_UnitPrice, 
            True AS _from0
        FROM ObjectContextEntities.ProductsAboveAveragePrice AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.ProductsAboveAveragePrice
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.ProductsAboveAveragePrice", @"
    SELECT VALUE -- Constructing ProductsAboveAveragePrice
        [Northwind.Dto.ProductsAboveAveragePrice](T1.ProductsAboveAveragePrice_ProductName, T1.ProductsAboveAveragePrice_UnitPrice)
    FROM (
        SELECT 
            T.ProductName AS ProductsAboveAveragePrice_ProductName, 
            T.UnitPrice AS ProductsAboveAveragePrice_UnitPrice, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.ProductsAboveAveragePrice AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.ProductSalesfor1997
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.ProductSalesfor1997", @"
    SELECT VALUE -- Constructing ProductSalesfor1997
        [Northwind.Dto.Store.ProductSalesfor1997](T1.ProductSalesfor1997_CategoryName, T1.ProductSalesfor1997_ProductName, T1.ProductSalesfor1997_ProductSales)
    FROM (
        SELECT 
            T.CategoryName AS ProductSalesfor1997_CategoryName, 
            T.ProductName AS ProductSalesfor1997_ProductName, 
            T.ProductSales AS ProductSalesfor1997_ProductSales, 
            True AS _from0
        FROM ObjectContextEntities.ProductSalesfor1997 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.ProductSalesfor1997
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.ProductSalesfor1997", @"
    SELECT VALUE -- Constructing ProductSalesfor1997
        [Northwind.Dto.ProductSalesfor1997](T1.ProductSalesfor1997_CategoryName, T1.ProductSalesfor1997_ProductName, T1.ProductSalesfor1997_ProductSales)
    FROM (
        SELECT 
            T.CategoryName AS ProductSalesfor1997_CategoryName, 
            T.ProductName AS ProductSalesfor1997_ProductName, 
            T.ProductSales AS ProductSalesfor1997_ProductSales, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.ProductSalesfor1997 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.ProductsbyCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.ProductsbyCategory", @"
    SELECT VALUE -- Constructing ProductsbyCategory
        [Northwind.Dto.Store.ProductsbyCategory](T1.ProductsbyCategory_CategoryName, T1.ProductsbyCategory_ProductName, T1.ProductsbyCategory_QuantityPerUnit, T1.ProductsbyCategory_UnitsInStock, T1.ProductsbyCategory_Discontinued)
    FROM (
        SELECT 
            T.CategoryName AS ProductsbyCategory_CategoryName, 
            T.ProductName AS ProductsbyCategory_ProductName, 
            T.QuantityPerUnit AS ProductsbyCategory_QuantityPerUnit, 
            T.UnitsInStock AS ProductsbyCategory_UnitsInStock, 
            T.Discontinued AS ProductsbyCategory_Discontinued, 
            True AS _from0
        FROM ObjectContextEntities.ProductsbyCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.ProductsbyCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.ProductsbyCategory", @"
    SELECT VALUE -- Constructing ProductsbyCategory
        [Northwind.Dto.ProductsbyCategory](T1.ProductsbyCategory_CategoryName, T1.ProductsbyCategory_ProductName, T1.ProductsbyCategory_QuantityPerUnit, T1.ProductsbyCategory_UnitsInStock, T1.ProductsbyCategory_Discontinued)
    FROM (
        SELECT 
            T.CategoryName AS ProductsbyCategory_CategoryName, 
            T.ProductName AS ProductsbyCategory_ProductName, 
            T.QuantityPerUnit AS ProductsbyCategory_QuantityPerUnit, 
            T.UnitsInStock AS ProductsbyCategory_UnitsInStock, 
            T.Discontinued AS ProductsbyCategory_Discontinued, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.ProductsbyCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.SalesbyCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.SalesbyCategory", @"
    SELECT VALUE -- Constructing SalesbyCategory
        [Northwind.Dto.Store.SalesbyCategory](T1.SalesbyCategory_CategoryID, T1.SalesbyCategory_CategoryName, T1.SalesbyCategory_ProductName, T1.SalesbyCategory_ProductSales)
    FROM (
        SELECT 
            T.CategoryID AS SalesbyCategory_CategoryID, 
            T.CategoryName AS SalesbyCategory_CategoryName, 
            T.ProductName AS SalesbyCategory_ProductName, 
            T.ProductSales AS SalesbyCategory_ProductSales, 
            True AS _from0
        FROM ObjectContextEntities.SalesbyCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.SalesbyCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.SalesbyCategory", @"
    SELECT VALUE -- Constructing SalesbyCategory
        [Northwind.Dto.SalesbyCategory](T1.SalesbyCategory_CategoryID, T1.SalesbyCategory_CategoryName, T1.SalesbyCategory_ProductName, T1.SalesbyCategory_ProductSales)
    FROM (
        SELECT 
            T.CategoryID AS SalesbyCategory_CategoryID, 
            T.CategoryName AS SalesbyCategory_CategoryName, 
            T.ProductName AS SalesbyCategory_ProductName, 
            T.ProductSales AS SalesbyCategory_ProductSales, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.SalesbyCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.SalesTotalsbyAmount
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.SalesTotalsbyAmount", @"
    SELECT VALUE -- Constructing SalesTotalsbyAmount
        [Northwind.Dto.Store.SalesTotalsbyAmount](T1.SalesTotalsbyAmount_SaleAmount, T1.SalesTotalsbyAmount_OrderID, T1.SalesTotalsbyAmount_CompanyName, T1.SalesTotalsbyAmount_ShippedDate)
    FROM (
        SELECT 
            T.SaleAmount AS SalesTotalsbyAmount_SaleAmount, 
            T.OrderID AS SalesTotalsbyAmount_OrderID, 
            T.CompanyName AS SalesTotalsbyAmount_CompanyName, 
            T.ShippedDate AS SalesTotalsbyAmount_ShippedDate, 
            True AS _from0
        FROM ObjectContextEntities.SalesTotalsbyAmount AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.SalesTotalsbyAmount
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.SalesTotalsbyAmount", @"
    SELECT VALUE -- Constructing SalesTotalsbyAmount
        [Northwind.Dto.SalesTotalsbyAmount](T1.SalesTotalsbyAmount_SaleAmount, T1.SalesTotalsbyAmount_OrderID, T1.SalesTotalsbyAmount_CompanyName, T1.SalesTotalsbyAmount_ShippedDate)
    FROM (
        SELECT 
            T.SaleAmount AS SalesTotalsbyAmount_SaleAmount, 
            T.OrderID AS SalesTotalsbyAmount_OrderID, 
            T.CompanyName AS SalesTotalsbyAmount_CompanyName, 
            T.ShippedDate AS SalesTotalsbyAmount_ShippedDate, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.SalesTotalsbyAmount AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.SummaryofSalesbyQuarter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.SummaryofSalesbyQuarter", @"
    SELECT VALUE -- Constructing SummaryofSalesbyQuarter
        [Northwind.Dto.Store.SummaryofSalesbyQuarter](T1.SummaryofSalesbyQuarter_ShippedDate, T1.SummaryofSalesbyQuarter_OrderID, T1.SummaryofSalesbyQuarter_Subtotal)
    FROM (
        SELECT 
            T.ShippedDate AS SummaryofSalesbyQuarter_ShippedDate, 
            T.OrderID AS SummaryofSalesbyQuarter_OrderID, 
            T.Subtotal AS SummaryofSalesbyQuarter_Subtotal, 
            True AS _from0
        FROM ObjectContextEntities.SummaryofSalesbyQuarter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.SummaryofSalesbyQuarter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.SummaryofSalesbyQuarter", @"
    SELECT VALUE -- Constructing SummaryofSalesbyQuarter
        [Northwind.Dto.SummaryofSalesbyQuarter](T1.SummaryofSalesbyQuarter_ShippedDate, T1.SummaryofSalesbyQuarter_OrderID, T1.SummaryofSalesbyQuarter_Subtotal)
    FROM (
        SELECT 
            T.ShippedDate AS SummaryofSalesbyQuarter_ShippedDate, 
            T.OrderID AS SummaryofSalesbyQuarter_OrderID, 
            T.Subtotal AS SummaryofSalesbyQuarter_Subtotal, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.SummaryofSalesbyQuarter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NorthwindDtoStoreContainer.SummaryofSalesbyYear
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NorthwindDtoStoreContainer.SummaryofSalesbyYear", @"
    SELECT VALUE -- Constructing SummaryofSalesbyYear
        [Northwind.Dto.Store.SummaryofSalesbyYear](T1.SummaryofSalesbyYear_ShippedDate, T1.SummaryofSalesbyYear_OrderID, T1.SummaryofSalesbyYear_Subtotal)
    FROM (
        SELECT 
            T.ShippedDate AS SummaryofSalesbyYear_ShippedDate, 
            T.OrderID AS SummaryofSalesbyYear_OrderID, 
            T.Subtotal AS SummaryofSalesbyYear_Subtotal, 
            True AS _from0
        FROM ObjectContextEntities.SummaryofSalesbyYear AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ObjectContextEntities.SummaryofSalesbyYear
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ObjectContextEntities.SummaryofSalesbyYear", @"
    SELECT VALUE -- Constructing SummaryofSalesbyYear
        [Northwind.Dto.SummaryofSalesbyYear](T1.SummaryofSalesbyYear_ShippedDate, T1.SummaryofSalesbyYear_OrderID, T1.SummaryofSalesbyYear_Subtotal)
    FROM (
        SELECT 
            T.ShippedDate AS SummaryofSalesbyYear_ShippedDate, 
            T.OrderID AS SummaryofSalesbyYear_OrderID, 
            T.Subtotal AS SummaryofSalesbyYear_Subtotal, 
            True AS _from0
        FROM NorthwindDtoStoreContainer.SummaryofSalesbyYear AS T
    ) AS T1");
        }
    }
}
